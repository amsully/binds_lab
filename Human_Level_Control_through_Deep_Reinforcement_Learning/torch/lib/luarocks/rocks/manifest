commands = {
   mdcat = {
      "sundown/scm-1"
   }
}
dependencies = {
   alewrap = {
      ['0-0'] = {
         {
            constraints = {},
            name = "xitari"
         }, {
            constraints = {},
            name = "image"
         }, {
            constraints = {},
            name = "paths"
         }
      }
   },
   argcheck = {
      ['scm-1'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     5, 1, string = "5.1"
                  }
               }
            },
            name = "lua"
         }
      }
   },
   cwrap = {
      ['scm-1'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     5, 1, string = "5.1"
                  }
               }
            },
            name = "lua"
         }
      }
   },
   dok = {
      ['scm-1'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     5, 1, string = "5.1"
                  }
               }
            },
            name = "lua"
         }, {
            constraints = {
               {
                  op = ">=",
                  version = {
                     1, 0, string = "1.0"
                  }
               }
            },
            name = "sundown"
         }
      }
   },
   env = {
      ['scm-1'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     7, 0, string = "7.0"
                  }
               }
            },
            name = "torch"
         }, {
            constraints = {},
            name = "gnuplot"
         }, {
            constraints = {},
            name = "dok"
         }
      }
   },
   gnuplot = {
      ['scm-1'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     5, 1, string = "5.1"
                  }
               }
            },
            name = "lua"
         }, {
            constraints = {
               {
                  op = ">=",
                  version = {
                     7, 0, string = "7.0"
                  }
               }
            },
            name = "torch"
         }, {
            constraints = {
               {
                  op = ">=",
                  version = {
                     1, 0, string = "1.0"
                  }
               }
            },
            name = "paths"
         }
      }
   },
   graph = {
      ['scm-1'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     7, 0, string = "7.0"
                  }
               }
            },
            name = "torch"
         }
      }
   },
   image = {
      ['1.1.alpha-0'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     7, 0, string = "7.0"
                  }
               }
            },
            name = "torch"
         }, {
            constraints = {
               {
                  op = ">=",
                  version = {
                     1, 0, string = "1.0"
                  }
               }
            },
            name = "sys"
         }, {
            constraints = {
               {
                  op = ">=",
                  version = {
                     1, 0, string = "1.0"
                  }
               }
            },
            name = "xlua"
         }, {
            constraints = {
               {
                  op = ">=",
                  version = {
                     1, 0, string = "1.0"
                  }
               }
            },
            name = "rational"
         }
      }
   },
   luafilesystem = {
      ['1.6.3-1'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     5, 1, string = "5.1"
                  }
               }
            },
            name = "lua"
         }
      }
   },
   nn = {
      ['scm-1'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     7, 0, string = "7.0"
                  }
               }
            },
            name = "torch"
         }
      }
   },
   nngraph = {
      ['scm-1'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     7, 0, string = "7.0"
                  }
               }
            },
            name = "torch"
         }, {
            constraints = {},
            name = "graph"
         }, {
            constraints = {},
            name = "nn"
         }
      }
   },
   paths = {
      ['scm-1'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     5, 1, string = "5.1"
                  }
               }
            },
            name = "lua"
         }
      }
   },
   penlight = {
      ['1.3.2-2'] = {
         {
            constraints = {},
            name = "luafilesystem"
         }
      }
   },
   rational = {
      ['scm-1'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     5, 1, string = "5.1"
                  }
               }
            },
            name = "lua"
         }, {
            constraints = {
               {
                  op = ">=",
                  version = {
                     1, 0, string = "1.0"
                  }
               }
            },
            name = "argcheck"
         }
      }
   },
   sundown = {
      ['scm-1'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     5, 1, string = "5.1"
                  }
               }
            },
            name = "lua"
         }
      }
   },
   sys = {
      ['1.1-0'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     7, 0, string = "7.0"
                  }
               }
            },
            name = "torch"
         }
      }
   },
   torch = {
      ['scm-1'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     5, 1, string = "5.1"
                  }
               }
            },
            name = "lua"
         }, {
            constraints = {
               {
                  op = ">=",
                  version = {
                     1, 0, string = "1.0"
                  }
               }
            },
            name = "paths"
         }, {
            constraints = {
               {
                  op = ">=",
                  version = {
                     1, 0, string = "1.0"
                  }
               }
            },
            name = "cwrap"
         }
      }
   },
   xitari = {
      ['0-0'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     7, 0, string = "7.0"
                  }
               }
            },
            name = "torch"
         }
      }
   },
   xlua = {
      ['1.0-0'] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     7, 0, string = "7.0"
                  }
               }
            },
            name = "torch"
         }, {
            constraints = {
               {
                  op = ">=",
                  version = {
                     1, 0, string = "1.0"
                  }
               }
            },
            name = "sys"
         }
      }
   }
}
modules = {
   alewrap = {
      "alewrap/0-0"
   },
   ['alewrap.AleEnv'] = {
      "alewrap/0-0"
   },
   ['alewrap.AtariLayer'] = {
      "alewrap/0-0"
   },
   ['alewrap.GameEnvironment'] = {
      "alewrap/0-0"
   },
   ['alewrap.GameScreen'] = {
      "alewrap/0-0"
   },
   ['alewrap.aleffi'] = {
      "alewrap/0-0"
   },
   ['alewrap/alewrap.inl'] = {
      "alewrap/0-0"
   },
   argcheck = {
      "argcheck/scm-1"
   },
   ['argcheck.doc'] = {
      "argcheck/scm-1"
   },
   ['argcheck.dump'] = {
      "argcheck/scm-1"
   },
   ['argcheck.env'] = {
      "argcheck/scm-1"
   },
   ['argcheck.graph'] = {
      "argcheck/scm-1"
   },
   ['argcheck.usage'] = {
      "argcheck/scm-1"
   },
   ['argcheck.utils'] = {
      "argcheck/scm-1"
   },
   cwrap = {
      "cwrap/scm-1"
   },
   ['cwrap.cinterface'] = {
      "cwrap/scm-1"
   },
   ['cwrap.types'] = {
      "cwrap/scm-1"
   },
   ['cwrap/README.md'] = {
      "cwrap/scm-1"
   },
   dok = {
      "dok/scm-1"
   },
   ['dok.inline'] = {
      "dok/scm-1"
   },
   env = {
      "env/scm-1"
   },
   gnuplot = {
      "gnuplot/scm-1"
   },
   ['gnuplot.gnuplot'] = {
      "gnuplot/scm-1"
   },
   ['gnuplot.hist'] = {
      "gnuplot/scm-1"
   },
   ['gnuplot/README.md'] = {
      "gnuplot/scm-1"
   },
   ['gnuplot/doc/plot_filled.png'] = {
      "gnuplot/scm-1"
   },
   ['gnuplot/doc/plot_hist.png'] = {
      "gnuplot/scm-1"
   },
   ['gnuplot/doc/plot_imagesc.png'] = {
      "gnuplot/scm-1"
   },
   ['gnuplot/doc/plot_sincos.png'] = {
      "gnuplot/scm-1"
   },
   ['gnuplot/doc/plot_splot.png'] = {
      "gnuplot/scm-1"
   },
   ['gnuplot/doc/plot_splot2.png'] = {
      "gnuplot/scm-1"
   },
   ['gnuplot/doc/plot_x.png'] = {
      "gnuplot/scm-1"
   },
   ['gnuplot/doc/plot_xyf.png'] = {
      "gnuplot/scm-1"
   },
   graph = {
      "graph/scm-1"
   },
   ['graph.Edge'] = {
      "graph/scm-1"
   },
   ['graph.Node'] = {
      "graph/scm-1"
   },
   ['graph.graphviz'] = {
      "graph/scm-1"
   },
   image = {
      "image/1.1.alpha-0"
   },
   ['image/README.md'] = {
      "image/1.1.alpha-0"
   },
   ['image/fabio.jpg'] = {
      "image/1.1.alpha-0"
   },
   ['image/fabio.png'] = {
      "image/1.1.alpha-0"
   },
   ['image/lena.jpg'] = {
      "image/1.1.alpha-0"
   },
   ['image/lena.png'] = {
      "image/1.1.alpha-0"
   },
   ['image/win.ui'] = {
      "image/1.1.alpha-0"
   },
   lfs = {
      "luafilesystem/1.6.3-1"
   },
   libalewrap = {
      "alewrap/0-0"
   },
   libimage = {
      "image/1.1.alpha-0"
   },
   libjpeg = {
      "image/1.1.alpha-0"
   },
   libnn = {
      "nn/scm-1"
   },
   libpaths = {
      "paths/scm-1"
   },
   libpng = {
      "image/1.1.alpha-0"
   },
   libppm = {
      "image/1.1.alpha-0"
   },
   libsundown = {
      "sundown/scm-1"
   },
   libsys = {
      "sys/1.1-0"
   },
   libtorch = {
      "torch/scm-1"
   },
   nn = {
      "nn/scm-1"
   },
   ['nn.Abs'] = {
      "nn/scm-1"
   },
   ['nn.AbsCriterion'] = {
      "nn/scm-1"
   },
   ['nn.Add'] = {
      "nn/scm-1"
   },
   ['nn.AddConstant'] = {
      "nn/scm-1"
   },
   ['nn.BCECriterion'] = {
      "nn/scm-1"
   },
   ['nn.BatchNormalization'] = {
      "nn/scm-1"
   },
   ['nn.CAddTable'] = {
      "nn/scm-1"
   },
   ['nn.CDivTable'] = {
      "nn/scm-1"
   },
   ['nn.CMul'] = {
      "nn/scm-1"
   },
   ['nn.CMulTable'] = {
      "nn/scm-1"
   },
   ['nn.CSubTable'] = {
      "nn/scm-1"
   },
   ['nn.Clamp'] = {
      "nn/scm-1"
   },
   ['nn.ClassNLLCriterion'] = {
      "nn/scm-1"
   },
   ['nn.Concat'] = {
      "nn/scm-1"
   },
   ['nn.ConcatTable'] = {
      "nn/scm-1"
   },
   ['nn.Container'] = {
      "nn/scm-1"
   },
   ['nn.Copy'] = {
      "nn/scm-1"
   },
   ['nn.CosineDistance'] = {
      "nn/scm-1"
   },
   ['nn.CosineEmbeddingCriterion'] = {
      "nn/scm-1"
   },
   ['nn.Criterion'] = {
      "nn/scm-1"
   },
   ['nn.CriterionTable'] = {
      "nn/scm-1"
   },
   ['nn.CrossEntropyCriterion'] = {
      "nn/scm-1"
   },
   ['nn.DepthConcat'] = {
      "nn/scm-1"
   },
   ['nn.DistKLDivCriterion'] = {
      "nn/scm-1"
   },
   ['nn.DotProduct'] = {
      "nn/scm-1"
   },
   ['nn.Dropout'] = {
      "nn/scm-1"
   },
   ['nn.ErrorMessages'] = {
      "nn/scm-1"
   },
   ['nn.Euclidean'] = {
      "nn/scm-1"
   },
   ['nn.Exp'] = {
      "nn/scm-1"
   },
   ['nn.FlattenTable'] = {
      "nn/scm-1"
   },
   ['nn.GradientReversal'] = {
      "nn/scm-1"
   },
   ['nn.HardShrink'] = {
      "nn/scm-1"
   },
   ['nn.HardTanh'] = {
      "nn/scm-1"
   },
   ['nn.HingeEmbeddingCriterion'] = {
      "nn/scm-1"
   },
   ['nn.Identity'] = {
      "nn/scm-1"
   },
   ['nn.Index'] = {
      "nn/scm-1"
   },
   ['nn.Jacobian'] = {
      "nn/scm-1"
   },
   ['nn.JoinTable'] = {
      "nn/scm-1"
   },
   ['nn.L1Cost'] = {
      "nn/scm-1"
   },
   ['nn.L1HingeEmbeddingCriterion'] = {
      "nn/scm-1"
   },
   ['nn.L1Penalty'] = {
      "nn/scm-1"
   },
   ['nn.Linear'] = {
      "nn/scm-1"
   },
   ['nn.Log'] = {
      "nn/scm-1"
   },
   ['nn.LogSigmoid'] = {
      "nn/scm-1"
   },
   ['nn.LogSoftMax'] = {
      "nn/scm-1"
   },
   ['nn.LookupTable'] = {
      "nn/scm-1"
   },
   ['nn.MM'] = {
      "nn/scm-1"
   },
   ['nn.MSECriterion'] = {
      "nn/scm-1"
   },
   ['nn.MarginCriterion'] = {
      "nn/scm-1"
   },
   ['nn.MarginRankingCriterion'] = {
      "nn/scm-1"
   },
   ['nn.Max'] = {
      "nn/scm-1"
   },
   ['nn.Mean'] = {
      "nn/scm-1"
   },
   ['nn.Min'] = {
      "nn/scm-1"
   },
   ['nn.MixtureTable'] = {
      "nn/scm-1"
   },
   ['nn.Module'] = {
      "nn/scm-1"
   },
   ['nn.Mul'] = {
      "nn/scm-1"
   },
   ['nn.MulConstant'] = {
      "nn/scm-1"
   },
   ['nn.MultiCriterion'] = {
      "nn/scm-1"
   },
   ['nn.MultiLabelMarginCriterion'] = {
      "nn/scm-1"
   },
   ['nn.MultiMarginCriterion'] = {
      "nn/scm-1"
   },
   ['nn.Narrow'] = {
      "nn/scm-1"
   },
   ['nn.NarrowTable'] = {
      "nn/scm-1"
   },
   ['nn.Normalize'] = {
      "nn/scm-1"
   },
   ['nn.PReLU'] = {
      "nn/scm-1"
   },
   ['nn.Padding'] = {
      "nn/scm-1"
   },
   ['nn.PairwiseDistance'] = {
      "nn/scm-1"
   },
   ['nn.Parallel'] = {
      "nn/scm-1"
   },
   ['nn.ParallelCriterion'] = {
      "nn/scm-1"
   },
   ['nn.ParallelTable'] = {
      "nn/scm-1"
   },
   ['nn.Power'] = {
      "nn/scm-1"
   },
   ['nn.ReLU'] = {
      "nn/scm-1"
   },
   ['nn.Replicate'] = {
      "nn/scm-1"
   },
   ['nn.Reshape'] = {
      "nn/scm-1"
   },
   ['nn.Select'] = {
      "nn/scm-1"
   },
   ['nn.SelectTable'] = {
      "nn/scm-1"
   },
   ['nn.Sequential'] = {
      "nn/scm-1"
   },
   ['nn.Sigmoid'] = {
      "nn/scm-1"
   },
   ['nn.SmoothL1Criterion'] = {
      "nn/scm-1"
   },
   ['nn.SoftMax'] = {
      "nn/scm-1"
   },
   ['nn.SoftMin'] = {
      "nn/scm-1"
   },
   ['nn.SoftPlus'] = {
      "nn/scm-1"
   },
   ['nn.SoftShrink'] = {
      "nn/scm-1"
   },
   ['nn.SoftSign'] = {
      "nn/scm-1"
   },
   ['nn.SparseJacobian'] = {
      "nn/scm-1"
   },
   ['nn.SparseLinear'] = {
      "nn/scm-1"
   },
   ['nn.SpatialAdaptiveMaxPooling'] = {
      "nn/scm-1"
   },
   ['nn.SpatialAveragePooling'] = {
      "nn/scm-1"
   },
   ['nn.SpatialBatchNormalization'] = {
      "nn/scm-1"
   },
   ['nn.SpatialContrastiveNormalization'] = {
      "nn/scm-1"
   },
   ['nn.SpatialConvolution'] = {
      "nn/scm-1"
   },
   ['nn.SpatialConvolutionMM'] = {
      "nn/scm-1"
   },
   ['nn.SpatialConvolutionMap'] = {
      "nn/scm-1"
   },
   ['nn.SpatialDivisiveNormalization'] = {
      "nn/scm-1"
   },
   ['nn.SpatialDropout'] = {
      "nn/scm-1"
   },
   ['nn.SpatialFullConvolution'] = {
      "nn/scm-1"
   },
   ['nn.SpatialFullConvolutionMap'] = {
      "nn/scm-1"
   },
   ['nn.SpatialLPPooling'] = {
      "nn/scm-1"
   },
   ['nn.SpatialMaxPooling'] = {
      "nn/scm-1"
   },
   ['nn.SpatialSoftMax'] = {
      "nn/scm-1"
   },
   ['nn.SpatialSubSampling'] = {
      "nn/scm-1"
   },
   ['nn.SpatialSubtractiveNormalization'] = {
      "nn/scm-1"
   },
   ['nn.SpatialUpSamplingNearest'] = {
      "nn/scm-1"
   },
   ['nn.SpatialZeroPadding'] = {
      "nn/scm-1"
   },
   ['nn.SplitTable'] = {
      "nn/scm-1"
   },
   ['nn.Sqrt'] = {
      "nn/scm-1"
   },
   ['nn.Square'] = {
      "nn/scm-1"
   },
   ['nn.StochasticGradient'] = {
      "nn/scm-1"
   },
   ['nn.Sum'] = {
      "nn/scm-1"
   },
   ['nn.Tanh'] = {
      "nn/scm-1"
   },
   ['nn.TanhShrink'] = {
      "nn/scm-1"
   },
   ['nn.TemporalConvolution'] = {
      "nn/scm-1"
   },
   ['nn.TemporalMaxPooling'] = {
      "nn/scm-1"
   },
   ['nn.TemporalSubSampling'] = {
      "nn/scm-1"
   },
   ['nn.Threshold'] = {
      "nn/scm-1"
   },
   ['nn.Transpose'] = {
      "nn/scm-1"
   },
   ['nn.View'] = {
      "nn/scm-1"
   },
   ['nn.VolumetricAveragePooling'] = {
      "nn/scm-1"
   },
   ['nn.VolumetricConvolution'] = {
      "nn/scm-1"
   },
   ['nn.VolumetricMaxPooling'] = {
      "nn/scm-1"
   },
   ['nn.WeightedEuclidean'] = {
      "nn/scm-1"
   },
   ['nn.WeightedMSECriterion'] = {
      "nn/scm-1"
   },
   ['nn.hessian'] = {
      "nn/scm-1"
   },
   ['nn.test'] = {
      "nn/scm-1"
   },
   ['nn.utils'] = {
      "nn/scm-1"
   },
   ['nn/README.md'] = {
      "nn/scm-1"
   },
   ['nn/doc/containers.md'] = {
      "nn/scm-1"
   },
   ['nn/doc/convolution.md'] = {
      "nn/scm-1"
   },
   ['nn/doc/criterion.md'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/abs.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/exp.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/hshrink.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/htanh.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/lena.jpg'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/lenap.jpg'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/logsigmoid.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/logsoftmax.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/power.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/prelu.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/relu.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/sigmmoid.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/sigmoid.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/softmax.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/softmin.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/softplus.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/softsign.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/sqrt.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/square.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/sshrink.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/image/tanh.png'] = {
      "nn/scm-1"
   },
   ['nn/doc/index.md'] = {
      "nn/scm-1"
   },
   ['nn/doc/module.md'] = {
      "nn/scm-1"
   },
   ['nn/doc/overview.md'] = {
      "nn/scm-1"
   },
   ['nn/doc/simple.md'] = {
      "nn/scm-1"
   },
   ['nn/doc/table.md'] = {
      "nn/scm-1"
   },
   ['nn/doc/testing.md'] = {
      "nn/scm-1"
   },
   ['nn/doc/training.md'] = {
      "nn/scm-1"
   },
   ['nn/doc/transfer.md'] = {
      "nn/scm-1"
   },
   nngraph = {
      "nngraph/scm-1"
   },
   ['nngraph.ModuleFromCriterion'] = {
      "nngraph/scm-1"
   },
   ['nngraph.gmodule'] = {
      "nngraph/scm-1"
   },
   ['nngraph.graphinspecting'] = {
      "nngraph/scm-1"
   },
   ['nngraph.nesting'] = {
      "nngraph/scm-1"
   },
   ['nngraph.node'] = {
      "nngraph/scm-1"
   },
   ['nngraph.simple_print'] = {
      "nngraph/scm-1"
   },
   ['nngraph.utils'] = {
      "nngraph/scm-1"
   },
   paths = {
      "paths/scm-1"
   },
   pl = {
      "penlight/1.3.2-2"
   },
   ['pl.Date'] = {
      "penlight/1.3.2-2"
   },
   ['pl.List'] = {
      "penlight/1.3.2-2"
   },
   ['pl.Map'] = {
      "penlight/1.3.2-2"
   },
   ['pl.MultiMap'] = {
      "penlight/1.3.2-2"
   },
   ['pl.OrderedMap'] = {
      "penlight/1.3.2-2"
   },
   ['pl.Set'] = {
      "penlight/1.3.2-2"
   },
   ['pl.app'] = {
      "penlight/1.3.2-2"
   },
   ['pl.array2d'] = {
      "penlight/1.3.2-2"
   },
   ['pl.class'] = {
      "penlight/1.3.2-2"
   },
   ['pl.compat'] = {
      "penlight/1.3.2-2"
   },
   ['pl.comprehension'] = {
      "penlight/1.3.2-2"
   },
   ['pl.config'] = {
      "penlight/1.3.2-2"
   },
   ['pl.data'] = {
      "penlight/1.3.2-2"
   },
   ['pl.dir'] = {
      "penlight/1.3.2-2"
   },
   ['pl.file'] = {
      "penlight/1.3.2-2"
   },
   ['pl.func'] = {
      "penlight/1.3.2-2"
   },
   ['pl.import_into'] = {
      "penlight/1.3.2-2"
   },
   ['pl.input'] = {
      "penlight/1.3.2-2"
   },
   ['pl.lapp'] = {
      "penlight/1.3.2-2"
   },
   ['pl.lexer'] = {
      "penlight/1.3.2-2"
   },
   ['pl.luabalanced'] = {
      "penlight/1.3.2-2"
   },
   ['pl.operator'] = {
      "penlight/1.3.2-2"
   },
   ['pl.path'] = {
      "penlight/1.3.2-2"
   },
   ['pl.permute'] = {
      "penlight/1.3.2-2"
   },
   ['pl.pretty'] = {
      "penlight/1.3.2-2"
   },
   ['pl.seq'] = {
      "penlight/1.3.2-2"
   },
   ['pl.sip'] = {
      "penlight/1.3.2-2"
   },
   ['pl.strict'] = {
      "penlight/1.3.2-2"
   },
   ['pl.stringio'] = {
      "penlight/1.3.2-2"
   },
   ['pl.stringx'] = {
      "penlight/1.3.2-2"
   },
   ['pl.tablex'] = {
      "penlight/1.3.2-2"
   },
   ['pl.template'] = {
      "penlight/1.3.2-2"
   },
   ['pl.test'] = {
      "penlight/1.3.2-2"
   },
   ['pl.text'] = {
      "penlight/1.3.2-2"
   },
   ['pl.types'] = {
      "penlight/1.3.2-2"
   },
   ['pl.url'] = {
      "penlight/1.3.2-2"
   },
   ['pl.utils'] = {
      "penlight/1.3.2-2"
   },
   ['pl.xml'] = {
      "penlight/1.3.2-2"
   },
   rational = {
      "rational/scm-1"
   },
   sundown = {
      "sundown/scm-1"
   },
   ['sundown.ascii'] = {
      "sundown/scm-1"
   },
   ['sundown.env'] = {
      "sundown/scm-1"
   },
   ['sundown.html'] = {
      "sundown/scm-1"
   },
   ['sundown.htmlcdefs'] = {
      "sundown/scm-1"
   },
   ['sundown.sdcdefs'] = {
      "sundown/scm-1"
   },
   sys = {
      "sys/1.1-0"
   },
   torch = {
      "torch/scm-1"
   },
   ['torch.CmdLine'] = {
      "torch/scm-1"
   },
   ['torch.FFI'] = {
      "torch/scm-1"
   },
   ['torch.File'] = {
      "torch/scm-1"
   },
   ['torch.Tensor'] = {
      "torch/scm-1"
   },
   ['torch.Tester'] = {
      "torch/scm-1"
   },
   ['torch.test'] = {
      "torch/scm-1"
   },
   ['torch/README.md'] = {
      "torch/scm-1"
   },
   ['torch/doc/cmdline.md'] = {
      "torch/scm-1"
   },
   ['torch/doc/diskfile.md'] = {
      "torch/scm-1"
   },
   ['torch/doc/file.md'] = {
      "torch/scm-1"
   },
   ['torch/doc/gather.png'] = {
      "torch/scm-1"
   },
   ['torch/doc/index.md'] = {
      "torch/scm-1"
   },
   ['torch/doc/maths.md'] = {
      "torch/scm-1"
   },
   ['torch/doc/memoryfile.md'] = {
      "torch/scm-1"
   },
   ['torch/doc/pipefile.md'] = {
      "torch/scm-1"
   },
   ['torch/doc/random.md'] = {
      "torch/scm-1"
   },
   ['torch/doc/serialization.md'] = {
      "torch/scm-1"
   },
   ['torch/doc/storage.md'] = {
      "torch/scm-1"
   },
   ['torch/doc/tensor.md'] = {
      "torch/scm-1"
   },
   ['torch/doc/tester.md'] = {
      "torch/scm-1"
   },
   ['torch/doc/timer.md'] = {
      "torch/scm-1"
   },
   ['torch/doc/utility.md'] = {
      "torch/scm-1"
   },
   xlua = {
      "xlua/1.0-0"
   },
   ['xlua.OptionParser'] = {
      "xlua/1.0-0"
   },
   ['xlua.Profiler'] = {
      "xlua/1.0-0"
   }
}
repository = {
   alewrap = {
      ['0-0'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               argcheck = "scm-1",
               cwrap = "scm-1",
               image = "1.1.alpha-0",
               paths = "scm-1",
               rational = "scm-1",
               sys = "1.1-0",
               torch = "scm-1",
               xitari = "0-0",
               xlua = "1.0-0"
            },
            modules = {
               alewrap = "alewrap/init.lua",
               ['alewrap.AleEnv'] = "alewrap/AleEnv.lua",
               ['alewrap.AtariLayer'] = "alewrap/AtariLayer.lua",
               ['alewrap.GameEnvironment'] = "alewrap/GameEnvironment.lua",
               ['alewrap.GameScreen'] = "alewrap/GameScreen.lua",
               ['alewrap.aleffi'] = "alewrap/aleffi.lua",
               ['alewrap/alewrap.inl'] = "alewrap/alewrap.inl",
               libalewrap = "libalewrap.so"
            }
         }
      }
   },
   argcheck = {
      ['scm-1'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {},
            modules = {
               argcheck = "argcheck/init.lua",
               ['argcheck.doc'] = "argcheck/doc.lua",
               ['argcheck.dump'] = "argcheck/dump.lua",
               ['argcheck.env'] = "argcheck/env.lua",
               ['argcheck.graph'] = "argcheck/graph.lua",
               ['argcheck.usage'] = "argcheck/usage.lua",
               ['argcheck.utils'] = "argcheck/utils.lua"
            }
         }
      }
   },
   cwrap = {
      ['scm-1'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {},
            modules = {
               cwrap = "cwrap/init.lua",
               ['cwrap.cinterface'] = "cwrap/cinterface.lua",
               ['cwrap.types'] = "cwrap/types.lua",
               ['cwrap/README.md'] = "cwrap/README.md"
            }
         }
      }
   },
   dok = {
      ['scm-1'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               sundown = "scm-1"
            },
            modules = {
               dok = "dok/init.lua",
               ['dok.inline'] = "dok/inline.lua"
            }
         }
      }
   },
   env = {
      ['scm-1'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               cwrap = "scm-1",
               dok = "scm-1",
               gnuplot = "scm-1",
               paths = "scm-1",
               sundown = "scm-1",
               torch = "scm-1"
            },
            modules = {
               env = "env/init.lua"
            }
         }
      }
   },
   gnuplot = {
      ['scm-1'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               cwrap = "scm-1",
               paths = "scm-1",
               torch = "scm-1"
            },
            modules = {
               gnuplot = "gnuplot/init.lua",
               ['gnuplot.gnuplot'] = "gnuplot/gnuplot.lua",
               ['gnuplot.hist'] = "gnuplot/hist.lua",
               ['gnuplot/README.md'] = "gnuplot/README.md",
               ['gnuplot/doc/plot_filled.png'] = "gnuplot/doc/plot_filled.png",
               ['gnuplot/doc/plot_hist.png'] = "gnuplot/doc/plot_hist.png",
               ['gnuplot/doc/plot_imagesc.png'] = "gnuplot/doc/plot_imagesc.png",
               ['gnuplot/doc/plot_sincos.png'] = "gnuplot/doc/plot_sincos.png",
               ['gnuplot/doc/plot_splot.png'] = "gnuplot/doc/plot_splot.png",
               ['gnuplot/doc/plot_splot2.png'] = "gnuplot/doc/plot_splot2.png",
               ['gnuplot/doc/plot_x.png'] = "gnuplot/doc/plot_x.png",
               ['gnuplot/doc/plot_xyf.png'] = "gnuplot/doc/plot_xyf.png"
            }
         }
      }
   },
   graph = {
      ['scm-1'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               cwrap = "scm-1",
               paths = "scm-1",
               torch = "scm-1"
            },
            modules = {
               graph = "graph/init.lua",
               ['graph.Edge'] = "graph/Edge.lua",
               ['graph.Node'] = "graph/Node.lua",
               ['graph.graphviz'] = "graph/graphviz.lua"
            }
         }
      }
   },
   image = {
      ['1.1.alpha-0'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               argcheck = "scm-1",
               cwrap = "scm-1",
               paths = "scm-1",
               rational = "scm-1",
               sys = "1.1-0",
               torch = "scm-1",
               xlua = "1.0-0"
            },
            modules = {
               image = "image/init.lua",
               ['image/README.md'] = "image/README.md",
               ['image/fabio.jpg'] = "image/fabio.jpg",
               ['image/fabio.png'] = "image/fabio.png",
               ['image/lena.jpg'] = "image/lena.jpg",
               ['image/lena.png'] = "image/lena.png",
               ['image/win.ui'] = "image/win.ui",
               libimage = "libimage.so",
               libjpeg = "libjpeg.so",
               libpng = "libpng.so",
               libppm = "libppm.so"
            }
         }
      }
   },
   luafilesystem = {
      ['1.6.3-1'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {},
            modules = {
               lfs = "lfs.so"
            }
         }
      }
   },
   nn = {
      ['scm-1'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               cwrap = "scm-1",
               paths = "scm-1",
               torch = "scm-1"
            },
            modules = {
               libnn = "libnn.so",
               nn = "nn/init.lua",
               ['nn.Abs'] = "nn/Abs.lua",
               ['nn.AbsCriterion'] = "nn/AbsCriterion.lua",
               ['nn.Add'] = "nn/Add.lua",
               ['nn.AddConstant'] = "nn/AddConstant.lua",
               ['nn.BCECriterion'] = "nn/BCECriterion.lua",
               ['nn.BatchNormalization'] = "nn/BatchNormalization.lua",
               ['nn.CAddTable'] = "nn/CAddTable.lua",
               ['nn.CDivTable'] = "nn/CDivTable.lua",
               ['nn.CMul'] = "nn/CMul.lua",
               ['nn.CMulTable'] = "nn/CMulTable.lua",
               ['nn.CSubTable'] = "nn/CSubTable.lua",
               ['nn.Clamp'] = "nn/Clamp.lua",
               ['nn.ClassNLLCriterion'] = "nn/ClassNLLCriterion.lua",
               ['nn.Concat'] = "nn/Concat.lua",
               ['nn.ConcatTable'] = "nn/ConcatTable.lua",
               ['nn.Container'] = "nn/Container.lua",
               ['nn.Copy'] = "nn/Copy.lua",
               ['nn.CosineDistance'] = "nn/CosineDistance.lua",
               ['nn.CosineEmbeddingCriterion'] = "nn/CosineEmbeddingCriterion.lua",
               ['nn.Criterion'] = "nn/Criterion.lua",
               ['nn.CriterionTable'] = "nn/CriterionTable.lua",
               ['nn.CrossEntropyCriterion'] = "nn/CrossEntropyCriterion.lua",
               ['nn.DepthConcat'] = "nn/DepthConcat.lua",
               ['nn.DistKLDivCriterion'] = "nn/DistKLDivCriterion.lua",
               ['nn.DotProduct'] = "nn/DotProduct.lua",
               ['nn.Dropout'] = "nn/Dropout.lua",
               ['nn.ErrorMessages'] = "nn/ErrorMessages.lua",
               ['nn.Euclidean'] = "nn/Euclidean.lua",
               ['nn.Exp'] = "nn/Exp.lua",
               ['nn.FlattenTable'] = "nn/FlattenTable.lua",
               ['nn.GradientReversal'] = "nn/GradientReversal.lua",
               ['nn.HardShrink'] = "nn/HardShrink.lua",
               ['nn.HardTanh'] = "nn/HardTanh.lua",
               ['nn.HingeEmbeddingCriterion'] = "nn/HingeEmbeddingCriterion.lua",
               ['nn.Identity'] = "nn/Identity.lua",
               ['nn.Index'] = "nn/Index.lua",
               ['nn.Jacobian'] = "nn/Jacobian.lua",
               ['nn.JoinTable'] = "nn/JoinTable.lua",
               ['nn.L1Cost'] = "nn/L1Cost.lua",
               ['nn.L1HingeEmbeddingCriterion'] = "nn/L1HingeEmbeddingCriterion.lua",
               ['nn.L1Penalty'] = "nn/L1Penalty.lua",
               ['nn.Linear'] = "nn/Linear.lua",
               ['nn.Log'] = "nn/Log.lua",
               ['nn.LogSigmoid'] = "nn/LogSigmoid.lua",
               ['nn.LogSoftMax'] = "nn/LogSoftMax.lua",
               ['nn.LookupTable'] = "nn/LookupTable.lua",
               ['nn.MM'] = "nn/MM.lua",
               ['nn.MSECriterion'] = "nn/MSECriterion.lua",
               ['nn.MarginCriterion'] = "nn/MarginCriterion.lua",
               ['nn.MarginRankingCriterion'] = "nn/MarginRankingCriterion.lua",
               ['nn.Max'] = "nn/Max.lua",
               ['nn.Mean'] = "nn/Mean.lua",
               ['nn.Min'] = "nn/Min.lua",
               ['nn.MixtureTable'] = "nn/MixtureTable.lua",
               ['nn.Module'] = "nn/Module.lua",
               ['nn.Mul'] = "nn/Mul.lua",
               ['nn.MulConstant'] = "nn/MulConstant.lua",
               ['nn.MultiCriterion'] = "nn/MultiCriterion.lua",
               ['nn.MultiLabelMarginCriterion'] = "nn/MultiLabelMarginCriterion.lua",
               ['nn.MultiMarginCriterion'] = "nn/MultiMarginCriterion.lua",
               ['nn.Narrow'] = "nn/Narrow.lua",
               ['nn.NarrowTable'] = "nn/NarrowTable.lua",
               ['nn.Normalize'] = "nn/Normalize.lua",
               ['nn.PReLU'] = "nn/PReLU.lua",
               ['nn.Padding'] = "nn/Padding.lua",
               ['nn.PairwiseDistance'] = "nn/PairwiseDistance.lua",
               ['nn.Parallel'] = "nn/Parallel.lua",
               ['nn.ParallelCriterion'] = "nn/ParallelCriterion.lua",
               ['nn.ParallelTable'] = "nn/ParallelTable.lua",
               ['nn.Power'] = "nn/Power.lua",
               ['nn.ReLU'] = "nn/ReLU.lua",
               ['nn.Replicate'] = "nn/Replicate.lua",
               ['nn.Reshape'] = "nn/Reshape.lua",
               ['nn.Select'] = "nn/Select.lua",
               ['nn.SelectTable'] = "nn/SelectTable.lua",
               ['nn.Sequential'] = "nn/Sequential.lua",
               ['nn.Sigmoid'] = "nn/Sigmoid.lua",
               ['nn.SmoothL1Criterion'] = "nn/SmoothL1Criterion.lua",
               ['nn.SoftMax'] = "nn/SoftMax.lua",
               ['nn.SoftMin'] = "nn/SoftMin.lua",
               ['nn.SoftPlus'] = "nn/SoftPlus.lua",
               ['nn.SoftShrink'] = "nn/SoftShrink.lua",
               ['nn.SoftSign'] = "nn/SoftSign.lua",
               ['nn.SparseJacobian'] = "nn/SparseJacobian.lua",
               ['nn.SparseLinear'] = "nn/SparseLinear.lua",
               ['nn.SpatialAdaptiveMaxPooling'] = "nn/SpatialAdaptiveMaxPooling.lua",
               ['nn.SpatialAveragePooling'] = "nn/SpatialAveragePooling.lua",
               ['nn.SpatialBatchNormalization'] = "nn/SpatialBatchNormalization.lua",
               ['nn.SpatialContrastiveNormalization'] = "nn/SpatialContrastiveNormalization.lua",
               ['nn.SpatialConvolution'] = "nn/SpatialConvolution.lua",
               ['nn.SpatialConvolutionMM'] = "nn/SpatialConvolutionMM.lua",
               ['nn.SpatialConvolutionMap'] = "nn/SpatialConvolutionMap.lua",
               ['nn.SpatialDivisiveNormalization'] = "nn/SpatialDivisiveNormalization.lua",
               ['nn.SpatialDropout'] = "nn/SpatialDropout.lua",
               ['nn.SpatialFullConvolution'] = "nn/SpatialFullConvolution.lua",
               ['nn.SpatialFullConvolutionMap'] = "nn/SpatialFullConvolutionMap.lua",
               ['nn.SpatialLPPooling'] = "nn/SpatialLPPooling.lua",
               ['nn.SpatialMaxPooling'] = "nn/SpatialMaxPooling.lua",
               ['nn.SpatialSoftMax'] = "nn/SpatialSoftMax.lua",
               ['nn.SpatialSubSampling'] = "nn/SpatialSubSampling.lua",
               ['nn.SpatialSubtractiveNormalization'] = "nn/SpatialSubtractiveNormalization.lua",
               ['nn.SpatialUpSamplingNearest'] = "nn/SpatialUpSamplingNearest.lua",
               ['nn.SpatialZeroPadding'] = "nn/SpatialZeroPadding.lua",
               ['nn.SplitTable'] = "nn/SplitTable.lua",
               ['nn.Sqrt'] = "nn/Sqrt.lua",
               ['nn.Square'] = "nn/Square.lua",
               ['nn.StochasticGradient'] = "nn/StochasticGradient.lua",
               ['nn.Sum'] = "nn/Sum.lua",
               ['nn.Tanh'] = "nn/Tanh.lua",
               ['nn.TanhShrink'] = "nn/TanhShrink.lua",
               ['nn.TemporalConvolution'] = "nn/TemporalConvolution.lua",
               ['nn.TemporalMaxPooling'] = "nn/TemporalMaxPooling.lua",
               ['nn.TemporalSubSampling'] = "nn/TemporalSubSampling.lua",
               ['nn.Threshold'] = "nn/Threshold.lua",
               ['nn.Transpose'] = "nn/Transpose.lua",
               ['nn.View'] = "nn/View.lua",
               ['nn.VolumetricAveragePooling'] = "nn/VolumetricAveragePooling.lua",
               ['nn.VolumetricConvolution'] = "nn/VolumetricConvolution.lua",
               ['nn.VolumetricMaxPooling'] = "nn/VolumetricMaxPooling.lua",
               ['nn.WeightedEuclidean'] = "nn/WeightedEuclidean.lua",
               ['nn.WeightedMSECriterion'] = "nn/WeightedMSECriterion.lua",
               ['nn.hessian'] = "nn/hessian.lua",
               ['nn.test'] = "nn/test.lua",
               ['nn.utils'] = "nn/utils.lua",
               ['nn/README.md'] = "nn/README.md",
               ['nn/doc/containers.md'] = "nn/doc/containers.md",
               ['nn/doc/convolution.md'] = "nn/doc/convolution.md",
               ['nn/doc/criterion.md'] = "nn/doc/criterion.md",
               ['nn/doc/image/abs.png'] = "nn/doc/image/abs.png",
               ['nn/doc/image/exp.png'] = "nn/doc/image/exp.png",
               ['nn/doc/image/hshrink.png'] = "nn/doc/image/hshrink.png",
               ['nn/doc/image/htanh.png'] = "nn/doc/image/htanh.png",
               ['nn/doc/image/lena.jpg'] = "nn/doc/image/lena.jpg",
               ['nn/doc/image/lenap.jpg'] = "nn/doc/image/lenap.jpg",
               ['nn/doc/image/logsigmoid.png'] = "nn/doc/image/logsigmoid.png",
               ['nn/doc/image/logsoftmax.png'] = "nn/doc/image/logsoftmax.png",
               ['nn/doc/image/power.png'] = "nn/doc/image/power.png",
               ['nn/doc/image/prelu.png'] = "nn/doc/image/prelu.png",
               ['nn/doc/image/relu.png'] = "nn/doc/image/relu.png",
               ['nn/doc/image/sigmmoid.png'] = "nn/doc/image/sigmmoid.png",
               ['nn/doc/image/sigmoid.png'] = "nn/doc/image/sigmoid.png",
               ['nn/doc/image/softmax.png'] = "nn/doc/image/softmax.png",
               ['nn/doc/image/softmin.png'] = "nn/doc/image/softmin.png",
               ['nn/doc/image/softplus.png'] = "nn/doc/image/softplus.png",
               ['nn/doc/image/softsign.png'] = "nn/doc/image/softsign.png",
               ['nn/doc/image/sqrt.png'] = "nn/doc/image/sqrt.png",
               ['nn/doc/image/square.png'] = "nn/doc/image/square.png",
               ['nn/doc/image/sshrink.png'] = "nn/doc/image/sshrink.png",
               ['nn/doc/image/tanh.png'] = "nn/doc/image/tanh.png",
               ['nn/doc/index.md'] = "nn/doc/index.md",
               ['nn/doc/module.md'] = "nn/doc/module.md",
               ['nn/doc/overview.md'] = "nn/doc/overview.md",
               ['nn/doc/simple.md'] = "nn/doc/simple.md",
               ['nn/doc/table.md'] = "nn/doc/table.md",
               ['nn/doc/testing.md'] = "nn/doc/testing.md",
               ['nn/doc/training.md'] = "nn/doc/training.md",
               ['nn/doc/transfer.md'] = "nn/doc/transfer.md"
            }
         }
      }
   },
   nngraph = {
      ['scm-1'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               cwrap = "scm-1",
               graph = "scm-1",
               nn = "scm-1",
               paths = "scm-1",
               torch = "scm-1"
            },
            modules = {
               nngraph = "nngraph/init.lua",
               ['nngraph.ModuleFromCriterion'] = "nngraph/ModuleFromCriterion.lua",
               ['nngraph.gmodule'] = "nngraph/gmodule.lua",
               ['nngraph.graphinspecting'] = "nngraph/graphinspecting.lua",
               ['nngraph.nesting'] = "nngraph/nesting.lua",
               ['nngraph.node'] = "nngraph/node.lua",
               ['nngraph.simple_print'] = "nngraph/simple_print.lua",
               ['nngraph.utils'] = "nngraph/utils.lua"
            }
         }
      }
   },
   paths = {
      ['scm-1'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {},
            modules = {
               libpaths = "libpaths.so",
               paths = "paths/init.lua"
            }
         }
      }
   },
   penlight = {
      ['1.3.2-2'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               luafilesystem = "1.6.3-1"
            },
            modules = {
               pl = "pl/init.lua",
               ['pl.Date'] = "pl/Date.lua",
               ['pl.List'] = "pl/List.lua",
               ['pl.Map'] = "pl/Map.lua",
               ['pl.MultiMap'] = "pl/MultiMap.lua",
               ['pl.OrderedMap'] = "pl/OrderedMap.lua",
               ['pl.Set'] = "pl/Set.lua",
               ['pl.app'] = "pl/app.lua",
               ['pl.array2d'] = "pl/array2d.lua",
               ['pl.class'] = "pl/class.lua",
               ['pl.compat'] = "pl/compat.lua",
               ['pl.comprehension'] = "pl/comprehension.lua",
               ['pl.config'] = "pl/config.lua",
               ['pl.data'] = "pl/data.lua",
               ['pl.dir'] = "pl/dir.lua",
               ['pl.file'] = "pl/file.lua",
               ['pl.func'] = "pl/func.lua",
               ['pl.import_into'] = "pl/import_into.lua",
               ['pl.input'] = "pl/input.lua",
               ['pl.lapp'] = "pl/lapp.lua",
               ['pl.lexer'] = "pl/lexer.lua",
               ['pl.luabalanced'] = "pl/luabalanced.lua",
               ['pl.operator'] = "pl/operator.lua",
               ['pl.path'] = "pl/path.lua",
               ['pl.permute'] = "pl/permute.lua",
               ['pl.pretty'] = "pl/pretty.lua",
               ['pl.seq'] = "pl/seq.lua",
               ['pl.sip'] = "pl/sip.lua",
               ['pl.strict'] = "pl/strict.lua",
               ['pl.stringio'] = "pl/stringio.lua",
               ['pl.stringx'] = "pl/stringx.lua",
               ['pl.tablex'] = "pl/tablex.lua",
               ['pl.template'] = "pl/template.lua",
               ['pl.test'] = "pl/test.lua",
               ['pl.text'] = "pl/text.lua",
               ['pl.types'] = "pl/types.lua",
               ['pl.url'] = "pl/url.lua",
               ['pl.utils'] = "pl/utils.lua",
               ['pl.xml'] = "pl/xml.lua"
            }
         }
      }
   },
   rational = {
      ['scm-1'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               argcheck = "scm-1"
            },
            modules = {
               rational = "rational.lua"
            }
         }
      }
   },
   sundown = {
      ['scm-1'] = {
         {
            arch = "installed",
            commands = {
               mdcat = "mdcat"
            },
            dependencies = {},
            modules = {
               libsundown = "libsundown.so",
               sundown = "sundown/init.lua",
               ['sundown.ascii'] = "sundown/ascii.lua",
               ['sundown.env'] = "sundown/env.lua",
               ['sundown.html'] = "sundown/html.lua",
               ['sundown.htmlcdefs'] = "sundown/htmlcdefs.lua",
               ['sundown.sdcdefs'] = "sundown/sdcdefs.lua"
            }
         }
      }
   },
   sys = {
      ['1.1-0'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               cwrap = "scm-1",
               paths = "scm-1",
               torch = "scm-1"
            },
            modules = {
               libsys = "libsys.so",
               sys = "sys/init.lua"
            }
         }
      }
   },
   torch = {
      ['scm-1'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               cwrap = "scm-1",
               paths = "scm-1"
            },
            modules = {
               libtorch = "libtorch.so",
               torch = "torch/init.lua",
               ['torch.CmdLine'] = "torch/CmdLine.lua",
               ['torch.FFI'] = "torch/FFI.lua",
               ['torch.File'] = "torch/File.lua",
               ['torch.Tensor'] = "torch/Tensor.lua",
               ['torch.Tester'] = "torch/Tester.lua",
               ['torch.test'] = "torch/test.lua",
               ['torch/README.md'] = "torch/README.md",
               ['torch/doc/cmdline.md'] = "torch/doc/cmdline.md",
               ['torch/doc/diskfile.md'] = "torch/doc/diskfile.md",
               ['torch/doc/file.md'] = "torch/doc/file.md",
               ['torch/doc/gather.png'] = "torch/doc/gather.png",
               ['torch/doc/index.md'] = "torch/doc/index.md",
               ['torch/doc/maths.md'] = "torch/doc/maths.md",
               ['torch/doc/memoryfile.md'] = "torch/doc/memoryfile.md",
               ['torch/doc/pipefile.md'] = "torch/doc/pipefile.md",
               ['torch/doc/random.md'] = "torch/doc/random.md",
               ['torch/doc/serialization.md'] = "torch/doc/serialization.md",
               ['torch/doc/storage.md'] = "torch/doc/storage.md",
               ['torch/doc/tensor.md'] = "torch/doc/tensor.md",
               ['torch/doc/tester.md'] = "torch/doc/tester.md",
               ['torch/doc/timer.md'] = "torch/doc/timer.md",
               ['torch/doc/utility.md'] = "torch/doc/utility.md"
            }
         }
      }
   },
   xitari = {
      ['0-0'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               cwrap = "scm-1",
               paths = "scm-1",
               torch = "scm-1"
            },
            modules = {}
         }
      }
   },
   xlua = {
      ['1.0-0'] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               cwrap = "scm-1",
               paths = "scm-1",
               sys = "1.1-0",
               torch = "scm-1"
            },
            modules = {
               xlua = "xlua/init.lua",
               ['xlua.OptionParser'] = "xlua/OptionParser.lua",
               ['xlua.Profiler'] = "xlua/Profiler.lua"
            }
         }
      }
   }
}
